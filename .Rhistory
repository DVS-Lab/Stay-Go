library(simr)
library(simr)
install.packages(simr)
install.packages("simr"")
install.packages(simr)
library(simr)
library(simr)
library(simr)
library(simr)
f\
test
library(plyr)
library(dplyr)
library(tidyverse)
library(plyr)
library(dplyr)
library(tidyverse)
library(plyr)
library(dplyr)
library(tidyverse)
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyverse)
setwd('A:/Data/Stay-Go/')
# Import Mike McCloskeys AUDIT data.
AUDIT_all <- read_sav('A:/Data/Stay-Go/ISTART_Master_Merged.sav') # Use AUDIT_tot
library(plyr)
library(dplyr)
library(tidyverse)
package.install("tidyverse")
install.package("tidyverse")
install.packages("tidyverse")
library(plyr)
library(dplyr)
library(tidyverse)
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(readr)
library(haven)
setwd('A:/Data/Stay-Go/')
AUDIT_all <- read_sav('A:/Data/Stay-Go/ISTART_Master_Merged.sav') # Use AUDIT_tot
AUDIT <- data.frame(AUDIT_all$AUDIT_tot)
# Import the data.
data_all <- list.files(path = 'A:/Data/Stay-Go/Participants',  # Identify all CSV files
pattern = "*.csv", full.names = TRUE) %>%
lapply(read_csv) %>%                              # Store all files in list
bind_rows                                         # Combine data sets into one data set
data_all                                            # Print data to RStudio console
# Make an ID for each participants.
# Generate an AUDIT dataset
subset <- AUDIT[sample(nrow(AUDIT), 123), ]
AUDIT_test <- data.frame()
ID <- data.frame()
N = 123
for (ii in 1:N) {
AUDIT_process = rep(subset[ii],55)
AUDIT_process = matrix(AUDIT_process)
subject = rep(ii,55)
subject= matrix(subject)
ID = rbind(ID,subject)
AUDIT_test = rbind(AUDIT_test,AUDIT_process)
}
colnames(ID) <- c("ID")
colnames(AUDIT_test) <- c("AUDIT_test")
# Concatenate the IDs to be tied to each participant
Full_Set = cbind(data_all, ID, AUDIT_test)
m1 <- lmer(Full_Set$Turn_Left ~  Full_Set$Final_Value * Full_Set$Alpha  + (Full_Set$Final_Value | Full_Set$ID) + (Full_Set$Final_Value | Full_Set$ID),
data = Full_Set,
REML = F)
library(lme4)
library(lmerTest)
library(simr)
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(lme4)
library(lmerTest)
library(simr)
install.packages("cli")
install.packages("cli")
install.packages("cli")
library(lme4)
library(lmerTest)
library(simr)
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
install.packages("cli")
detach(simr)
